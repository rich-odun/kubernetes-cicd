name: CI/CD Pipeline
on: workflow_dispatch
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
       id-token: write
       contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
           aws-region: us-west-1
           role-to-assume: arn:aws:iam::166941686774:role/my-github-actions-role
           
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: test_repo_gitaction
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG           

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: |
      #       ghcr.io/${{ github.repository }}:latest
      #       ghcr.io/${{ github.repository }}:${{ github.sha }}
      - name: Update GitOps repository
        shell: bash
        env:
          GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GIT_TOKEN: ${{ secrets.GITOPS_PAT }}
          IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:${{ github.sha }}
        run: |
          # Configure git credential store
          git config --global credential.helper store
          echo "https://x-access-token:${GIT_TOKEN}@github.com" > ~/.git-credentials
          
          # Remove any existing gitops directory
          rm -rf gitops
          
          # Clone repository using HTTPS URL without token
          git clone https://github.com/rich-odun/grade-api-gitops.git gitops
          cd gitops
          
          if [[ "$OSTYPE" == "darwin"* ]]; then
            sed -i '' "s|image: PLACEHOLDER_IMAGE|image: $IMAGE|g" deployment.yaml
          else
            sed -i "s|image: PLACEHOLDER_IMAGE|image: $IMAGE|g" deployment.yaml
          fi
          
          # # Commit changes
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add deployment.yaml
          git commit -m "Update image to ${{ github.sha }}"
          
          # Push
          # git push -f https://x-access-token:${GIT_TOKEN}@github.com/rich-odun/grade-api-gitops.git main
          git push origin main
